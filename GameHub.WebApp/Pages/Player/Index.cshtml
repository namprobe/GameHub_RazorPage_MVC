@page "/Player/Index"
@model GameHub.WebApp.Pages.Player.IndexModel

@{
    ViewData["Title"] = "Games";
    Layout = "_Layout";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Explore Games</h1>
    <a asp-page="/Login" class="btn btn-outline-secondary">Back to Login</a>
    
    <!-- You may add a cart or profile link here later -->
</div>

<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-3">
                <label asp-for="Filter.Title" class="form-label">Title</label>
                <input asp-for="Filter.Title" class="form-control" placeholder="Search by title..." />
            </div>
            <div class="col-md-2">
                <label asp-for="Filter.CategoryId" class="form-label">Category</label>
                <select asp-for="Filter.CategoryId" class="form-select">
                    <option value="">All Categories</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category.Id">@category.CategoryName</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label asp-for="Filter.DeveloperId" class="form-label">Developer</label>
                <select asp-for="Filter.DeveloperId" class="form-select">
                    <option value="">All Developers</option>
                    @foreach (var developer in Model.Developers)
                    {
                        <option value="@developer.Id">@developer.DeveloperName</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label asp-for="Filter.SortBy" class="form-label">Sort By</label>
                <select asp-for="Filter.SortBy" class="form-select">
                    <option value="">Default (CreatedAt)</option>
                    <option value="CreatedAt">Created Date</option>
                    <option value="Title">Title</option>
                    <option value="Price">Price</option>
                    <option value="ReleaseDate">Release Date</option>
                </select>
            </div>
            <div class="col-md-2">
                <label asp-for="Filter.IsAscending" class="form-label">Order</label>
                <select asp-for="Filter.IsAscending" class="form-select">
                    <option value="">Default (Descending)</option>
                    <option value="true">Ascending</option>
                    <option value="false">Descending</option>
                </select>
            </div>
            <div class="col-md-2">
                <label asp-for="Filter.PageSize" class="form-label">Page Size</label>
                <select asp-for="Filter.PageSize" class="form-select">
                    <option value="10">10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                </select>
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button type="submit" class="btn btn-primary me-2">Search</button>
                <a asp-page="/Player/Index" class="btn btn-outline-secondary">Clear</a>
            </div>
        </form>
    </div>
    
</div>

@if (Model.Games.IsSuccess)
{
    <div class="card">
        <div class="card-header">
            <h5 class="mb-0">Games (@Model.Games.TotalItems items)</h5>
        </div>
        <div class="card-body">
            @if (Model.Games.Items?.Any() == true)
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Title</th>
                                <th>Price</th>
                                <th>Category</th>
                                <th>Developer</th>
                                <th>Release Date</th>
                                <th>Players</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var game in Model.Games.Items)
                            {
                                <tr>
                                    <td><strong>@game.Title</strong></td>
                                    <td>$@game.Price.ToString("F2")</td>
                                    <td>@(game.Category?.CategoryName ?? "No Category")</td>
                                    <td>@(game.Developer?.DeveloperName ?? "No Developer")</td>
                                    <td>@(game.ReleaseDate?.ToString("yyyy-MM-dd") ?? "Not set")</td>
                                    <td>
                                        <span class="badge bg-info">
                                            @game.PlayerCount players
                                        </span>
                                    </td>
                                    <td>
                                        <span class="badge @(game.IsActive ? "bg-success" : "bg-secondary")">
                                            @(game.IsActive ? "Active" : "Inactive")
                                        </span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @if (Model.Games.TotalPages > 1)
                {
                    <nav aria-label="Games pagination">
                        <ul class="pagination justify-content-center mt-3">
                            @if (Model.Games.CurrentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-page="/Player/Index" asp-route-Filter.Page="@(Model.Games.CurrentPage - 1)" asp-route-Filter.PageSize="@Model.Filter.PageSize" asp-route-Filter.Title="@Model.Filter.Title" asp-route-Filter.CategoryId="@Model.Filter.CategoryId" asp-route-Filter.DeveloperId="@Model.Filter.DeveloperId" asp-route-Filter.SortBy="@Model.Filter.SortBy" asp-route-Filter.IsAscending="@Model.Filter.IsAscending">Previous</a>
                                </li>
                            }

                            @for (int i = Math.Max(1, Model.Games.CurrentPage - 2); i <= Math.Min(Model.Games.TotalPages, Model.Games.CurrentPage + 2); i++)
                            {
                                <li class="page-item @(i == Model.Games.CurrentPage ? "active" : "")">
                                    <a class="page-link" asp-page="/Player/Index" asp-route-Filter.Page="@i" asp-route-Filter.PageSize="@Model.Filter.PageSize" asp-route-Filter.Title="@Model.Filter.Title" asp-route-Filter.CategoryId="@Model.Filter.CategoryId" asp-route-Filter.DeveloperId="@Model.Filter.DeveloperId" asp-route-Filter.SortBy="@Model.Filter.SortBy" asp-route-Filter.IsAscending="@Model.Filter.IsAscending">@i</a>
                                </li>
                            }

                            @if (Model.Games.CurrentPage < Model.Games.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-page="/Player/Index" asp-route-Filter.Page="@(Model.Games.CurrentPage + 1)" asp-route-Filter.PageSize="@Model.Filter.PageSize" asp-route-Filter.Title="@Model.Filter.Title" asp-route-Filter.CategoryId="@Model.Filter.CategoryId" asp-route-Filter.DeveloperId="@Model.Filter.DeveloperId" asp-route-Filter.SortBy="@Model.Filter.SortBy" asp-route-Filter.IsAscending="@Model.Filter.IsAscending">Next</a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="text-center py-4">
                    <p class="text-muted">No games found.</p>
                </div>
            }
        </div>
    </div>
}
else
{
    <div class="alert alert-danger">
        <h4>Error Loading Games</h4>
        <p>@Model.Games.Message</p>
    </div>
}
